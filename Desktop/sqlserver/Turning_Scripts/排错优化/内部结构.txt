查询的内部过程：

---关系引擎
1.客户端应用发送T-SQL给SQL服务器
2.SQL通过命令分析器（检查安全，分析语法，
检查缓存池中的计划缓存有没有合适的），如果
没有的话，命令分析器会产生一个查询树交给
优化器，根据成本开销选择一个最合适的执行计划，
交给SQL管理器去编译（CPU开销！）
3.通知查询执行器按照执行计划去执行

--存储引擎
1、查询执行器生成一个OLEDB集合交给
访问方法管理器（它知道所有数据的结构），
通知缓冲区管理器访问SQLOS的缓冲池中的数据缓存。
如果数据缓存中没有请求的页面，将产生IO从硬盘上
中的数据文件中读取。

更新的内部过程：
---关系引擎 （同查询一样）
---存储引擎
1、查询执行器生成一个OLEDB集合交给
访问方法管理器（它知道所有数据的结构），通知
事务管理器写入磁盘事务日志文件，写入完成后
返回信息给访问方法管理器，然后再通知缓冲区管理器
修改缓冲池中数据缓冲中的页面（脏页），最后通知
客户端事务成功提交。

问题：什么时候脏页写入到磁盘？
1、惰性写入器：
        1）定时扫描数据缓冲中的脏页，
           将一段时间内没有使用的脏页写入磁盘。
        2）管理缓冲池大小（它发现windows内存不够，  
             它就释放缓冲池占用的内存，反之则增加）
    
2、检查点
        定时扫描数据缓冲中的脏页，
           将一段时间内没有使用的脏页写入磁盘。
     






